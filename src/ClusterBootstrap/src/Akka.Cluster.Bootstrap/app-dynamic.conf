# See petabridge.cmd configuration options here: https://cmd.petabridge.com/articles/install/host-configuration.html
petabridge.cmd{
	# default IP address used to listen for incoming petabridge.cmd client connections
	# should be a safe default as it listens on "all network interfaces".
	host = "0.0.0.0"

	# default port number used to listen for incoming petabridge.cmd client connections
	port = 9110
}

akka {
    loglevel = INFO
    # trigger autostart by loading the extension through config
    extensions = ["Akka.Management.Cluster.Bootstrap.ClusterBootstrapProvider, Akka.Management.Cluster.Bootstrap"]

    actor.provider = cluster
  
    remote {
        dot-netty.tcp {
            transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
            applied-adapters = []
            transport-protocol = tcp
            hostname = "" # Overriden by docker bootstrap
            port = 4053
        }
    }            

    cluster {
        roles = [cluster]
        
      downing-provider-class = "Akka.Cluster.SBR.SplitBrainResolverProvider, Akka.Cluster"
      split-brain-resolver {
        active-strategy = keep-majority
      }
    }
    
    management {
        http.port = 8558
        http.hostname = ""
        cluster.bootstrap {
            contact-point-discovery {
                discovery-method = akka.discovery
                service-name = clusterbootstrap
                port-name = management
                required-contact-point-nr = 2
                stable-margin = 5s
                contact-with-all-contact-points = true
            }
        }
    }
    
    discovery {
        method = kubernetes-api
        
        kubernetes-api {
            class = "Akka.Discovery.KubernetesApi.KubernetesApiServiceDiscovery, Akka.Discovery.KubernetesApi"

            # API server, cert and token information. Currently these are present on K8s versions: 1.6, 1.7, 1.8, and perhaps more
            api-ca-path = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
            api-token-path = "/var/run/secrets/kubernetes.io/serviceaccount/token"
            api-service-host-env-name = "KUBERNETES_SERVICE_HOST"
            api-service-port-env-name = "KUBERNETES_SERVICE_PORT"

            # Namespace discovery path
            #
            # If this path doesn't exist, the namespace will default to "default".
            pod-namespace-path = "/var/run/secrets/kubernetes.io/serviceaccount/namespace"

            # Namespace to query for pods.
            #
            # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
            pod-namespace = "<pod-namespace>"

            # Domain of the k8s cluster
            pod-domain = "cluster.local"

            # Selector value to query pod API with.
            # `{0}` will be replaced with the configured effective name, which defaults to the actor system name
            pod-label-selector = "app={0}"

            # Enables the usage of the raw IP instead of the composed value for the resolved target host
            use-raw-ip = false

            # When set, validate the container is not in 'waiting' state
            container-name = ""
        }
    }
}